import math
# Add any extra import statements you may need here


# Add any helper functions you may need here


def numberOfWays(arr, k):
  result_dict = {}
  result = 0
  half_k = k / 2
  
  for i in arr:
    diff = k - i
    
    if diff > 0:
      if result_dict.get(diff) is None:
        result_dict[diff] = 0
      
      result_dict[diff] += 1
      
  for key in result_dict:
    if half_k == key:
      continue
      
    diff_value = result_dict[key]
    original_value = result_dict.get(k - key)
    
    if original_value is not None:
      result += diff_value * original_value
    
  result = int(result / 2)
  
  if k % 2 == 0 and result_dict[half_k] >= 2:
    result += int(result_dict[half_k] * (result_dict[half_k] - 1) / 2)

  return result












# These are the tests we use to determine if the solution is correct.
# You can add your own at the bottom, but they are otherwise not editable!

def printInteger(n):
  print('[', n, ']', sep='', end='')

test_case_number = 1

def check(expected, output):
  global test_case_number
  result = False
  if expected == output:
    result = True
  rightTick = '\u2713'
  wrongTick = '\u2717'
  if result:
    print(rightTick, 'Test #', test_case_number, sep='')
  else:
    print(wrongTick, 'Test #', test_case_number, ': Expected ', sep='', end='')
    printInteger(expected)
    print(' Your output: ', end='')
    printInteger(output)
    print()
  test_case_number += 1

if __name__ == "__main__":
  k_1 = 6
  arr_1 = [1, 2, 3, 4, 3]
  expected_1 = 2
  output_1 = numberOfWays(arr_1, k_1)
  check(expected_1, output_1)

  k_2 = 6
  arr_2 = [1, 5, 3, 3, 3]
  expected_2 = 4
  output_2 = numberOfWays(arr_2, k_2)
  check(expected_2, output_2)

  def test_suite(k, array, expected):
    output = numberOfWays(array, k)
    check(expected, output)
  
  test_suite(5, [1, 1, 2, 2, 2, 5, 3, 3, 3], 9)
  test_suite(5, [1], 0)
  test_suite(3, [2, 1, 2, 1, 1], 6)